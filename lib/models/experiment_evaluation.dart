import 'package:cloud_firestore/cloud_firestore.dart';

/// 実験評価のタイプ
enum EvaluationType {
  good('Good'),
  bad('Bad'),
  neutral('Neutral'); // 未評価または自動完了時

  final String label;
  const EvaluationType(this.label);
}

/// 評価者の役割
enum EvaluatorRole {
  experimenter('実験者'),
  participant('被験者');

  final String label;
  const EvaluatorRole(this.label);
}

/// 実験評価モデル
class ExperimentEvaluation {
  final String id;
  final String experimentId;       // 実験ID
  final String evaluatorId;        // 評価者のユーザーID
  final String evaluatedUserId;    // 被評価者のユーザーID
  final EvaluatorRole evaluatorRole; // 評価者の役割
  final EvaluationType type;       // 評価タイプ
  final String? comment;           // コメント（任意）
  final DateTime createdAt;        // 評価日時
  final bool isAutoGenerated;      // 自動生成された評価かどうか

  ExperimentEvaluation({
    required this.id,
    required this.experimentId,
    required this.evaluatorId,
    required this.evaluatedUserId,
    required this.evaluatorRole,
    required this.type,
    this.comment,
    required this.createdAt,
    this.isAutoGenerated = false,
  });

  /// FirestoreのドキュメントからExperimentEvaluationを作成
  factory ExperimentEvaluation.fromFirestore(DocumentSnapshot doc) {
    final data = doc.data() as Map<String, dynamic>;
    
    return ExperimentEvaluation(
      id: doc.id,
      experimentId: data['experimentId'] ?? '',
      evaluatorId: data['evaluatorId'] ?? '',
      evaluatedUserId: data['evaluatedUserId'] ?? '',
      evaluatorRole: EvaluatorRole.values.firstWhere(
        (e) => e.name == (data['evaluatorRole'] ?? 'participant'),
        orElse: () => EvaluatorRole.participant,
      ),
      type: EvaluationType.values.firstWhere(
        (e) => e.name == (data['type'] ?? 'neutral'),
        orElse: () => EvaluationType.neutral,
      ),
      comment: data['comment'],
      createdAt: (data['createdAt'] as Timestamp?)?.toDate() ?? DateTime.now(),
      isAutoGenerated: data['isAutoGenerated'] ?? false,
    );
  }

  /// ExperimentEvaluationをFirestoreに保存する形式に変換
  Map<String, dynamic> toFirestore() {
    return {
      'experimentId': experimentId,
      'evaluatorId': evaluatorId,
      'evaluatedUserId': evaluatedUserId,
      'evaluatorRole': evaluatorRole.name,
      'type': type.name,
      'comment': comment,
      'createdAt': Timestamp.fromDate(createdAt),
      'isAutoGenerated': isAutoGenerated,
    };
  }

  /// 新規評価作成用のファクトリーメソッド
  factory ExperimentEvaluation.create({
    required String experimentId,
    required String evaluatorId,
    required String evaluatedUserId,
    required EvaluatorRole evaluatorRole,
    required EvaluationType type,
    String? comment,
    bool isAutoGenerated = false,
  }) {
    return ExperimentEvaluation(
      id: '', // Firestoreで自動生成
      experimentId: experimentId,
      evaluatorId: evaluatorId,
      evaluatedUserId: evaluatedUserId,
      evaluatorRole: evaluatorRole,
      type: type,
      comment: comment,
      createdAt: DateTime.now(),
      isAutoGenerated: isAutoGenerated,
    );
  }
}